{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 float gauss(vec2 xy, vec2 kapa, vec2 center) \{\
    const float PI = 3.1415926535;\
\
    float result = 1.0 * exp(-1.0 * (\
                                     pow(xy.x - center.x, 2.0) / (2.0 * pow(kapa.x, 2.0)) \
                                     + pow(xy.y - center.y, 2.0) / (2.0 * pow(kapa.y, 2.0))\
                                   )\
                             );\
    return result;\
\}\
\
// Put into https://www.shadertoy.com/new# to check\
void mainImage( out vec4 fragColor, in vec2 fragCoord )\
\{\
    vec2 xy = fragCoord.xy / iResolution.xy;\
    vec2 xyM = iMouse.xy / iResolution.xy;\
\
    // variance\
    float ratio = iResolution.x / iResolution.y;\
    float variance = 0.07;\
    vec2 kapa = vec2(variance, variance * ratio);\
    \
    float resColor = gauss(xy, kapa, xyM);\
\
    fragColor = vec4(vec3(resColor), 1.0);\
\}}