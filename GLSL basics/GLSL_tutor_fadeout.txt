    // usual version
    //if (xy.y <= fadePoi)
    //    fragColor = vec4(vec3(1.0), 1.0);
    //else
    //    fragColor = vec4(vec3(fadeOut(xy.y)), 1.0);
        
    // inverted version
    //if (xy.y > fadePoi)
    //    fragColor = vec4(vec3(1.0), 1.0);
    //else
    //    fragColor = vec4(vec3(fadeOut(1.0 - xy.y)), 1.0);
    
const float fadePoi = 0.7;
const vec2 poi1 = vec2(fadePoi, 1.0);
const vec2 poi2 = vec2(1.0, 0.0);

const float a = (poi1.y - poi2.y) / log(poi1.x / poi2.x);
const float b = exp((poi2.y * log(poi1.x) - poi1.y * log(poi2.x)) / (poi1.y - poi2.y));

float fadeOut(float y) {
    return a * log(b * y);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 xy = fragCoord.xy;
    xy.xy = xy.xy / iResolution.xy;
    
    if (xy.y > fadePoi)
        fragColor = vec4(vec3(1.0), 1.0);
    else
        fragColor = vec4(vec3(fadeOut(1.0 - xy.y)), 1.0);
}
